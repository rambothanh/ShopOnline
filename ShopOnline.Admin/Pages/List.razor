@page "/list"
@using System.Text.Json
@using System.IO
@inject HttpClient Http
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager


@if (products == null)
{
    <p>Loading...</p>
}
else
{
        <div class="@((string.IsNullOrEmpty(message)? "d-none" : "")) alert alert-warning" role="alert">
            @message
        </div>  
        <table id="table_id" class="table table-striped table-hover table-sm table-bordered" style="width:100%">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Type</th>
                    <th>Brand</th>
                    <th>Quantity</th>
                    <th>Current Price</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (Product product in products)
                {
                <tr>

                    <td>@product.Name</td>
                    <td>@product.ProductType.Name</td>
                    <td>@product.ProductBrand.Name</td>

                    <td>@product.Quantity</td>
                    <td>@product.ProductPrice.CurrentPrice</td>
                    <td class="text-center">
                        <span @onclick="()=>EditProduct(product)" id="@("editproduct"+@product.Id)" class=" btn mr-3 oi oi-pencil" aria-hidden="true"></span>
                        <span @onclick="()=>DeleteProduct(product)" id="@("deleteproduct"+@product.Id)"  class="mr-3 oi oi-delete" aria-hidden="true"></span>
                    </td>
                </tr>
                }
            </tbody>
            @*<tfoot>
                <tr>
                    <th>Name</th>
                    <th>Type</th>
                    <th>Brand</th>
                    <th>Short Description</th>
                    <th>Quantity</th>
                    <th>Current Price</th>
                    <th>Action</th>
                </tr>
            </tfoot>*@
        </table>
   
    @**@
}

@code {

    //JS
    private IJSObjectReference _jsModule;
    private List<Product> products;
    private string message;

    protected override async Task OnInitializedAsync()
    {
        products = await Http.GetFromJsonAsync<List<Product>>($"Products");
        //import js
        _jsModule = await JSRuntime.InvokeAsync<IJSObjectReference>("import", "./ListScripts.js");

    }

    @* Click delete icon *@
    private async Task DeleteProduct(Product product){
        //Delete image first
        await Http.DeleteAsync($"UploadImage/{product.Id}");
        //Delete Product
        var deleteProductHttp = await Http.DeleteAsync($"Products/{product.Id}");
        message = "A product has deleted";
        this.StateHasChanged();
    }
    @* End Click delete icon *@

    @* Click edit icon *@
     private void EditProduct(Product product){
       //Nagigation to Edit page
        NavigationManager.NavigateTo($"edit/{product.Id}");
       
    }
     @* End Click edit icon *@

}
