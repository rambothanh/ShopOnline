@page "/list"
@using System.Text.Json
@using System.IO
@inject HttpClient Http
@inject IJSRuntime JSRuntime

@if (products == null)
{
    <p>Loading...</p>
}
else
{
    
        <table id="table_id" class="table table-striped table-hover table-sm table-bordered" style="width:100%">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Type</th>
                    <th>Brand</th>
                    <th>Quantity</th>
                    <th>Current Price</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (Product product in products)
                {
                <tr>

                    <td>@product.Name</td>
                    <td>@product.ProductType.Name</td>
                    <td>@product.ProductBrand.Name</td>

                    <td>@product.Quantity</td>
                    <td>@product.ProductPrice.CurrentPrice</td>
                    <td class="text-center">
                        <span class="text-warning mr-2 oi oi-pencil" aria-hidden="true"></span>
                        <span id="@("deleteproduct"+@product.Id)" @onclick="()=>DeleteProduct(product)" class="text-danger oi oi-delete" aria-hidden="true"></span>
                    </td>
                </tr>
                }
            </tbody>
            @*<tfoot>
                <tr>
                    <th>Name</th>
                    <th>Type</th>
                    <th>Brand</th>
                    <th>Short Description</th>
                    <th>Quantity</th>
                    <th>Current Price</th>
                    <th>Action</th>
                </tr>
            </tfoot>*@
        </table>
   
    @**@
}

@code {

    //JS
    private IJSObjectReference _jsModule;
    private List<Product> products;

    protected override async Task OnInitializedAsync()
    {
        products = await Http.GetFromJsonAsync<List<Product>>($"Products");
        //import js
        _jsModule = await JSRuntime.InvokeAsync<IJSObjectReference>("import", "./ListScripts.js");

    }
    private async Task DeleteProduct(Product product){
        //Delete image first
        await Http.DeleteAsync($"UploadImage/{product.Id}");
        //Delete Product
        var deleteProductHttp = await Http.DeleteAsync($"Products/{product.Id}");
    }

}
